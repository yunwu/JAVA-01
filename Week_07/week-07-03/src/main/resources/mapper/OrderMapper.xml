<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="V3.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="V3.model.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="goods_snap_shot_id" jdbcType="BIGINT" property="goodsSnapShotId" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, goods_snap_shot_id, price, goods_name, `status`, create_time, update_time, deleted
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="V3.model.Order">
    insert into `order` (id, goods_snap_shot_id, price,
      goods_name, `status`, create_time, 
      update_time, deleted)
    values (#{id,jdbcType=BIGINT}, #{goodsSnapShotId,jdbcType=BIGINT}, #{price,jdbcType=DOUBLE}, 
      #{goodsName,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="V3.model.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="goodsSnapShotId != null">
        goods_snap_shot_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsSnapShotId != null">
        #{goodsSnapShotId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="V3.model.Order">
    update order
    <set>
      <if test="goodsSnapShotId != null">
        goods_snap_shot_id = #{goodsSnapShotId,jdbcType=BIGINT},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="V3.model.Order">
    update order
    set goods_snap_shot_id = #{goodsSnapShotId,jdbcType=BIGINT},
      price = #{price,jdbcType=DOUBLE},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getTop100Order" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from `order` order by id desc limit 100;
  </select>
</mapper>